<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mediamarktsaturn.technolinator</groupId>
    <artifactId>technolinator</artifactId>
    <description>The MMS GitHub Bot</description>
    <version>0.0.0-SNAPSHOT</version>
    <properties>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.18.4</quarkus.platform.version>

        <quarkus-github-app.version>2.8.4</quarkus-github-app.version>

        <cyclonedx-core-java.version>10.1.0</cyclonedx-core-java.version>
        <jruby.jcodings.version>1.0.61</jruby.jcodings.version>
        <jruby.joni.version>2.2.3</jruby.joni.version>

        <!-- test -->
        <assertj.version>3.27.3</assertj.version>
        <awaitility.version>4.2.2</awaitility.version>
        <quarkus-wiremock.version>1.4.1</quarkus-wiremock.version>

        <!-- provided -->
        <jetbrains-annotations.version>26.0.2</jetbrains-annotations.version>

        <skipITs>true</skipITs>
        <surefire-plugin.version>3.5.2</surefire-plugin.version>
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <clean-plugin.version>3.4.0</clean-plugin.version>
        <dependency-plugin.version>3.8.1</dependency-plugin.version>
        <maven-license-plugin.version>2.5.0</maven-license-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.quarkiverse.githubapp</groupId>
            <artifactId>quarkus-github-app</artifactId>
            <version>${quarkus-github-app.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-context-propagation</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-logging-json</artifactId>
        </dependency>
        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>smallrye-mutiny-vertx-web-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.cyclonedx</groupId>
            <artifactId>cyclonedx-core-java</artifactId>
            <version>${cyclonedx-core-java.version}</version>
        </dependency>
        <!-- requied by cyclonedx-core-java, explicit to enable native image reflection config -->
        <dependency>
            <groupId>org.jruby.jcodings</groupId>
            <artifactId>jcodings</artifactId>
            <version>${jruby.jcodings.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jruby.joni</groupId>
            <artifactId>joni</artifactId>
            <version>${jruby.joni.version}</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5-mockito</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.githubapp</groupId>
            <artifactId>quarkus-github-app-testing</artifactId>
            <version>${quarkus-github-app.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.wiremock</groupId>
            <artifactId>quarkus-wiremock</artifactId>
            <version>${quarkus-wiremock.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.wiremock</groupId>
            <artifactId>quarkus-wiremock-test</artifactId>
            <version>${quarkus-wiremock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jacoco</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- provided -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${jetbrains-annotations.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.release}</source>
                    <target>${maven.compiler.release}</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <test_Env1>this's just a test</test_Env1>
                        <test_Env2>oh_yeah-look_at_me</test_Env2>
                        <ALLOWED_ENV_SUBSTITUTIONS>test_Env1, test_Env2</ALLOWED_ENV_SUBSTITUTIONS>
                        <JAVA17_HOME>/path/to/jdk17</JAVA17_HOME>
                        <JAVA20_HOME>/path/to/jdk20</JAVA20_HOME>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemPropertyVariables>
                                <native.image.path>${project.build.directory}/${project.build.finalName}-runner
                                </native.image.path>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <maven.home>${maven.home}</maven.home>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- cleanup sbom files generated during test -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/test/resources/repo</directory>
                            <includes>
                                <include>**/target/**</include>
                                <include>**/sbom.*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${maven-license-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>add-third-party</goal>
                        </goals>
                        <configuration>
                            <excludedGroups>
                                (^com\.sun)|^(relaxngDatatype)
                            </excludedGroups>
                            <failOnBlacklist>true</failOnBlacklist>
                            <licenseMergesUrl>
                                https://policies.mms.tech/maven/licenseMerges
                            </licenseMergesUrl>
                            <includedLicenses>
                                https://policies.mms.tech/maven/includedLicenses
                            </includedLicenses>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.package.type>native</quarkus.package.type>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>${project.basedir}/src/main/resources</directory>
                    </resource>
                    <resource>
                        <directory>${project.build.directory}/generated-resources</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${dependency-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>unpack-dependencies</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>unpack-dependencies</goal>
                                </goals>
                                <configuration>
                                    <includeGroupIds>org.cyclonedx</includeGroupIds>
                                    <includeArtifactIds>cyclonedx-core-java</includeArtifactIds>
                                    <includes>**/*.xsd,**/*.json,**/*.proto,**/*.txt</includes>
                                    <outputDirectory>${project.build.directory}/generated-resources</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <organization>
        <name>MediaMarktSaturn Technology</name>
        <url>https://mms.tech</url>
    </organization>
    <inceptionYear>2023</inceptionYear>
    <licenses>
        <license>
            <name>Apache-2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
</project>
